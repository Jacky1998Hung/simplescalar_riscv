sim-safe: SimpleScalar/RISCV Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

ArchLib: ignored ELF64 program segment UNKNOWN: 1879048195 
ArchLib: ignored ELF64 program segment UNKNOWN: 7 
ArchLib: ignored ELF64 program segment UNKNOWN: 1685382481 
ArchLib: ignored ELF64 program segment UNKNOWN: 1685382482 
sim: command line: ../../sim-safe test-math 

sim: simulation started @ Thu Dec  8 22:55:42 2022, options follow:

sim-safe: This simulator implements a functional simulator.  This
functional simulator is the simplest, most user-friendly simulator in the
simplescalar tool set.  Unlike sim-fast, this functional simulator checks
for all instruction errors, and the implementation is crafted for clarity
rather than speed.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute

sim: ** starting functional simulation **
test-math: strtod_l.c:598: ____strtod_l_internal: Assertion `decimal_len > 0' failed.
panic: ebreak: not implement [sim_main:machine.def, line 898]

sim: ** simulation statistics **
sim_num_insn                  43211 # total number of instructions executed
sim_num_refs                  12976 # total number of loads and stores executed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate            43211.0000 # simulation speed (in insts/sec)
ld_text_base             0x000103c8 # program text (code) segment base
ld_text_bound            0x0006888c # program text (code) segment bound
ld_text_size                 361668 # program text (code) size in bytes
ld_data_base             0x00068890 # program initialized data segment base
ld_data_bound            0x000911c8 # program initialized data segment bound
ld_data_size                 166200 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0xc0000000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x000105d8 # program entry point (initial PC)
ld_environ_base          0xbfffc000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  138 # total number of pages allocated
mem.page_mem                   552k # total size of memory pages allocated
mem.ptab_misses                 325 # total first level page table misses
mem.ptab_accesses           2212543 # total page table accesses
mem.ptab_miss_rate           0.0001 # first level page table miss rate

Aborted (core dumped)
